<Window x:Class="P4VHelper.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:l="clr-namespace:P4VHelper"
        xmlns:res="clr-namespace:P4VHelper.Resource"
        xmlns:uc="clr-namespace:P4VHelper.Customize.Control"
        xmlns:p="clr-namespace:P4VHelper.Customize.Property"
        xmlns:r="clr-namespace:P4VHelper.Resource"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="800"
        Width="800"
        Name="MainWindow"
        AllowsTransparency="True"
        WindowStyle="None"
        Loaded="OnLoaded"
        Closing="OnClosing"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <!--
    WindowStyle None에서 윈도우 리사이즈 방법
    @참고: https://stackoverflow.com/questions/611298/how-to-create-a-wpf-window-without-a-border-that-can-be-resized-via-a-grip-only
    -->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"
                      ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Grid Name="MainGrid">

        <Grid.Height>
            <!--
            MainGrid는 사용자에게 보여줄 패널과 패널을 벗어난 상태바를 포함한다.
            @참고: https://stackoverflow.com/questions/3340821/how-can-i-pass-a-constant-value-for-1-binding-in-multi-binding
            멀티바인딩을 활용하여 여러개의 인자(MainWindow.Height와 MAIN_GRID_HEIGHT_MULTIPLIER)를 전달할 수 있다.
            -->
            <MultiBinding Converter="{StaticResource DoubleMultiplyConverter}">
                <Binding ElementName="MainWindow"
                         Path="Height" />
                <Binding Source="{x:Static l:Constant.MAIN_GRID_HEIGHT_MULTIPLIER}" />
            </MultiBinding>
        </Grid.Height>
        <Grid Name="MainPanelGrid"
              Grid.Row="0"
              Height="{Binding Height}"
              VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <!--타이틀바 높이-->
                <RowDefinition Height="30" />

                <!--메뉴바 높이-->
                <RowDefinition Height="30" />

                <!--탭컨트롤 높이-->
                <RowDefinition Height="*" />

                <!--로그박스 높이-->
                <RowDefinition Height="300" />

                <!--상태줄 높이-->
                <RowDefinition Height="{Binding Converter={StaticResource DoubleToGridLengthConverter}, ConverterParameter={x:Static l:Constant.STATUS_BAR_HEIGHT}}" />
            </Grid.RowDefinitions>

            <!-- 메뉴 -->
            <uc:TitleBar x:Name="TitlePanel"
                         FontSize="16"
                         Title="{x:Static l:Constant.TITLE}"
                         DockPanel.Dock="Top"
                         TitleContentMargin="0, 0, 5, 0"
                         TitleContent="{Binding Source={x:Static l:Constant.TITLE}}">
                <uc:TitleBar.TitleContentTemplate>
                    <DataTemplate>
                        <TextBlock Text="테스트" />
                    </DataTemplate>
                </uc:TitleBar.TitleContentTemplate>
            </uc:TitleBar>

            <!-- 메뉴 -->
            <StackPanel Grid.Row="1"
                        Orientation="Horizontal">
                <Menu Background="Transparent">
                    <MenuItem Header="파일">
                        <MenuItem Header="아이템 없음" />
                    </MenuItem>
                </Menu>
            </StackPanel>

            <TabControl Grid.Row="2">
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Converter={StaticResource IconConverter}, ConverterParameter={x:Static res:R.ICON_HISTORY_KEY}}" />
                            <TextBlock Text="History"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </TabItem.Header>

                    <!-- 히스토리 -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <!--히스토리/검색박스 높이-->
                            <RowDefinition Height="30" />

                            <!--히스토리/테이블 높이-->
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- 히스토리/검색박스-->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <!--히스토리/검색박스/텍스트박스 너비-->
                                <ColumnDefinition Width="*" />

                                <!--히스토리/검색박스/버튼 너비-->
                                <ColumnDefinition Width="60" />
                            </Grid.ColumnDefinitions>

                            <uc:PlaceholderTextBox Style="{StaticResource PlaceholderTextBox}"
                                                   Background="Transparent"
                                                   Grid.Column="0"
                                                   x:Name="HistorySearchTextBox"
                                                   VerticalContentAlignment="Center"
                                                   Text="안녕"
                                                   Placeholder="안녕하세요">

                            </uc:PlaceholderTextBox>
                            <Button Grid.Column="1"
                                    Name="HistorySearchButton"
                                    Content="검색" />
                        </Grid>

                        <!-- 히스토리/테이블-->
                        <Grid Grid.Row="1">
                            <Grid.Resources>
                                <!-- 히스토리/테이블/뷰소스-->
                                <CollectionViewSource x:Key="ChangelistViewSource"
                                                      Source="{Binding ViewModel.HistoryChangelists}">
                                    <CollectionViewSource.SortDescriptions>
                                        <scm:SortDescription PropertyName="Revision"
                                                             Direction="Descending" />
                                    </CollectionViewSource.SortDescriptions>
                                </CollectionViewSource>
                            </Grid.Resources>

                            <DataGrid ItemsSource="{Binding Source={StaticResource ChangelistViewSource}}"
                                      AutoGenerateColumns="False"
                                      GridLinesVisibility="None">

                                <!-- 히스토리/테이블/컬럼-->
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Revision"
                                                        Width="30"
                                                        Binding="{Binding Revision}" />
                                    <DataGridTextColumn Header="UserName"
                                                        Width="80"
                                                        Binding="{Binding UserName}" />
                                    <DataGridTextColumn Header="Description"
                                                        Width="*"
                                                        Binding="{Binding Description}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>

            <!-- 로그 -->
            <uc:LogListBox Grid.Row="3"
                           x:Name="LogListBox"
                           Width="{Binding Width}"
                           Height="300">
            </uc:LogListBox>

            <!-- 상태표시줄 -->
            <Grid Grid.Row="4"
                  Name="StatusGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <!-- 테스크 뷰 -->
                        <ColumnDefinition Width="*" />

                        <!-- 작업 수 -->
                        <ColumnDefinition Width="40" />

                        <!-- 쓰레드 수 -->
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>

                    <uc:BackgroundTaskCtrl DataContext="{Binding ViewModel.TaskMgr.TargetedTask}">
                    </uc:BackgroundTaskCtrl>

                    <!--<Grid>

                        

                        <Grid ToolTip="작업 이름을 나타냅니다.">
                            <TextBlock Text="{Binding ViewModel.TaskMgr.TargetedTask.Name}"
                                       VerticalAlignment="Center" />
                        </Grid>
                        <Grid Grid.Column="1"
                              ToolTip="실행중인 작업의 진행정도를 나타냅니다.">
                            <ProgressBar Background="Aquamarine"
                                         Value="{Binding ViewModel.TaskMgr.TargetedTask.Percent, Mode=OneWay}"
                                         Maximum="100.0" />
                            <TextBlock Text="{Binding ViewModel.TaskMgr.TargetedTask.ProgressText, Mode=OneWay}" />
                        </Grid>

                    </Grid>-->
                    
                    <StackPanel Grid.Column="1"
                                ToolTip="실행중이거나 실행 대기중인 작업 수"
                                Orientation="Horizontal"
                                FlowDirection="LeftToRight">
                        <Image Source="{Binding Converter={StaticResource IconConverter}, ConverterParameter={x:Static res:R.ICON_RUN_KEY}}" />
                        <TextBlock VerticalAlignment="Center">

                            <!-- 
                            컨버터 파라미터에 바인딩 하는 방법.
                            @참고: https://stackoverflow.com/questions/15309008/binding-converterparameter 
                            바인딩 할 수 없으니... value에 담아서 전달해버리네 ㅎㄷㄷ
                            -->
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource StringConverter}">
                                    <Binding Path="ViewModel.TaskMgr.TotalTaskCount" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Column="2"
                                ToolTip="작업을 실행중인 쓰레드 수를 의미합니다."
                                Orientation="Horizontal"
                                FlowDirection="LeftToRight">
                        <Image Source="{Binding Converter={StaticResource IconConverter}, ConverterParameter={x:Static res:R.ICON_SPARK_KEY}}" />
                        <TextBlock VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource StringConverter}">
                                    <Binding Path="ViewModel.TaskMgr.RunningThreadCount" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                    <!--
                    작업을 실행중인 경우만 작업표시줄의 상황을 보여준다.
                    <-->
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ViewModel.TaskMgr.TargetedTask.IsRunning, Mode=OneWay}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ViewModel.TaskMgr.TargetedTask.IsRunning, Mode=OneWay}"
                                             Value="False">
                                    <Setter Property="Visibility"
                                            Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>

                <uc:ImageToggleButton Grid.Column="1"
                                      NormalImageSource="{Binding Converter={StaticResource IconConverter}, ConverterParameter={x:Static res:R.ICON_UP_KEY}}"
                                      ToggledImageSource="{Binding Converter={StaticResource IconConverter}, ConverterParameter={x:Static res:R.ICON_DOWN_KEY}}"
                                      Toggled="{Binding ViewModel.TaskMgr.ViewDetail}"
                                      Command="{Binding ViewModel.Commander.ShowStatusDetail}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                </uc:ImageToggleButton>

                <Grid.Style>
                    <Style TargetType="Grid">

                    </Style>
                </Grid.Style>
            </Grid>
        </Grid>
        <Grid Name="StatusExpandedGrid"
              Background="White"
              VerticalAlignment="Bottom">
            <Grid.Height>

                <!--
                    코드로는 이렇게 작성가능함
                    MultiBinding multiBinding = new MultiBinding();
                    multiBinding.Converter = new DoubleDivideConverter();

                    Binding mainWindowHeightBinding = new Binding();
                    mainWindowHeightBinding.ElementName = "MainWindow";
                    mainWindowHeightBinding.Path = new PropertyPath("Height");

                    Binding constantBinding = new Binding();
                    constantBinding.Source = Constant.STATUS_BAR_DIVISION;

                    multiBinding.Bindings.Add(mainWindowHeightBinding);
                    multiBinding.Bindings.Add(constantBinding);

                    StatusExpandedGrid.SetBinding(Grid.HeightProperty, multiBinding);
                -->

                <!--확장 상태바 높이는 MainWindow / STATUS_BAR_EXPANDED_DIVISION 을 유지하도록 한다.-->
                <MultiBinding Converter="{StaticResource DoubleDivideConverter}">
                    <Binding ElementName="MainWindow"
                             Path="ActualHeight" />
                    <Binding Source="{x:Static l:Constant.STATUS_BAR_EXPANDED_DIVISION}" />
                </MultiBinding>
            </Grid.Height>
            <Grid.Style>

                <!--확장 상태바 마진(MainGrid상에서의 위치)은 확장 상태바 토글 버튼의 상태(백그라운드 테스크 매니저의 ViewDetail 변수의 상태)에 따라
                  안보일 때는 마진 탑을 윈도우 높이로
                  보일 때는 마진 바텀을 상태바 높이 + 확장 상태바 높이로 조정하도록 한다. (Drawer 효과 구현을 위함)
                  -->

                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ViewModel.TaskMgr.ViewDetail}"
                                     Value="False">
                            <Setter Property="Grid.Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource DoubleToMarginConverter}">
                                        <Binding Source="{x:Static l:Constant.ZERO}" />
                                        <Binding ElementName="MainWindow"
                                                 Path="Height" />
                                        <Binding Source="{x:Static l:Constant.ZERO}" />
                                        <Binding Source="{x:Static l:Constant.ZERO}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ViewModel.TaskMgr.ViewDetail}"
                                     Value="True">
                            <Setter Property="Grid.Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource DoubleToMarginConverter}">
                                        <Binding Source="{x:Static l:Constant.ZERO}" />
                                        <Binding Source="{x:Static l:Constant.ZERO}" />
                                        <Binding Source="{x:Static l:Constant.ZERO}" />
                                        <Binding ElementName="StatusExpandedGrid"
                                                 Path="Height" />
                                        <Binding Source="{x:Static l:Constant.STATUS_BAR_HEIGHT_THICKNESS}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <!--확장 상태바 내용-->

        </Grid>
    </Grid>
</Window>
